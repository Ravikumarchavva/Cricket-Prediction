version: '3.8'

services:
  hdfs-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-namenode
    environment:
      - CLUSTER_NAME=hadoop
    ports:
      - 9870:9870  # HDFS NameNode Web UI
    volumes:
      - hdfs-namenode-data:/hadoop/dfs/name
    networks:
      - cricket-prediction

  hdfs-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: hdfs-datanode
    environment:
      - CLUSTER_NAME=hadoop
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    ports:
      - 9864:9864  # HDFS DataNode Web UI
    volumes:
      - hdfs-datanode-data:/hadoop/dfs/data
    depends_on:
      - hdfs-namenode
    networks:
      - cricket-prediction

  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    environment:
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - 8080:8080  # Spark Master Web UI
      - 7077:7077  # Spark Master Port
    networks:
      - cricket-prediction

  spark-worker:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker
    environment:
      - SPARK_WORKER_CORES=4          # Allocate CPU cores
      - SPARK_WORKER_MEMORY=4g        # Allocate memory
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - 8081:8081  # Spark Worker Web UI
    networks:
      - cricket-prediction

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////usr/local/airflow/airflow.db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_CONN_WEBHDFS_DEFAULT=hdfs://hdfs-namenode:9870
    ports:
      - 8082:8080  # Airflow Webserver UI
    networks:
      - cricket-prediction
    depends_on:
      - hdfs-namenode
      - hdfs-datanode
      - spark-master
    entrypoint: ["/entrypoint.sh"]
    command: ["webserver"]

volumes:
  hdfs-namenode-data:
  hdfs-datanode-data:

networks:
  cricket-prediction:
    driver: bridge
